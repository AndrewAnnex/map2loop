# Have geomodeller batch create map2loop geology model, first  attempt
#  This is a mock up, no way it will work without a bit of effort
#  faults names are numeric, in this example
# formations are mostly standard text names, with Major Geology "_"  TIme
#  then unit, and a possible numeric
# with the other / prior use of this style of API, geology from Geophysics
# based upon gravity and TMI, results in primative body units with
#  style of Contact99 etc   see the geology from geophysics task files
#-----------------Set Project Boundaries------------------------ 
# this example will not run without extra data that is specified to be imported
# use this example as a template for your own case study
#  execute  geomodellerbatch -batch Creating_Models.task
# or        jfmanager -batch Creating_Models.task

name: "UWA_Intrepid"
description: "Automate_batch_Model"
    GeomodellerTask {
    CreateProject {
        name: "Hamersley"
        author: "Des/Mark"
        date: "23/10/2019  0: 0: 0"
        projection { map_projection: "GDA94 / MGA50"}
        version: "2.0"
        units: meters
        precision: 1.0
        #######################  nothing in the dtm, if it is not a geotif!
        Extents {
            xmin: 500000
            ymin: 7455500
            zmin: -3000
            xmax: 603000
            ymax: 7568000
            zmax: 1000
        }
        deflection2d: 0.001
        deflection3d: 0.001
        discretisation: 10.0
        referenceTop: false
        CustomDTM {
            Extents {
                xmin: 500000
                ymin: 7455500
                xmax: 603000
                ymax: 7568000
            }
            name: "Topography"
            filename {
                Grid_Name: "./dtm/hammersley_sheet_dtm.ers"
            }
            nx: 10
            ny: 10
        }
    }
}
#---------------------------------------------------------------
#-----------------------Create Formations-----------------------
#  extracted from your Group-fault relations
#---------------------------------------------------------------
GeomodellerTask {
    CreateFormation {
        name: "P__WYm_sp"
        red: 255
        green: 230
        blue: 153
    }
}
GeomodellerTask {
    CreateFormation {
        name: "P__WYa_st"
        red: 255
        green: 192
        blue: 0.0
    }
}
GeomodellerTask {
    CreateFormation {
        name: "P__WYd_kd"
        red: 237
        green: 125
        blue: 49
    }
}
GeomodellerTask {
    CreateFormation {
        name: "P__SKq_stq"
        red: 128
        green: 0.0
        blue: 0.0
    }
}
GeomodellerTask {
    CreateFormation {
        name: "P__SKb_bb"
        red: 8
        green: 78
        blue: 147
    }
}
GeomodellerTask {
    CreateFormation {
        name: "P__TKa_xs_k"
        red: 83
        green: 130
        blue: 52
    }
}
GeomodellerTask {
    CreateFormation {
        name: "P__TKo_stq"
        red: 127
        green: 128
        blue: 0.0
    }
}
GeomodellerTask {
    CreateFormation {
        name: "P__TKk_sf"
        red: 206
        green: 0.0
        blue: 205
    }
}
GeomodellerTask {
    CreateFormation {
        name: "P__TK_s"
        red: 158
        green: 33
        blue: 238
    }
}
GeomodellerTask {
    CreateFormation {
        name: "P__HAo_ci"
        red: 0.0
        green: 178
        blue: 238
    }
}
GeomodellerTask {
    CreateFormation {
        name: "P__HAw_fr"
        red: 255
        green: 230
        blue: 153
    }
}
GeomodellerTask {
    CreateFormation {
        name: "P__HAj_xci_od"
        red: 255
        green: 192
        blue: 0.0
    }
}
GeomodellerTask {
    CreateFormation {
        name: "P__HAb_cib"
        red: 237
        green: 125
        blue: 49
    }
}
GeomodellerTask {
    CreateFormation {
        name: "A_HAS_xsl_ci"
        red: 128
        green: 0.0
        blue: 0.0
    }
}
GeomodellerTask {
    CreateFormation {
        name: "A_HAd_kd"
        red: 8
        green: 78
        blue: 147
    }
}
GeomodellerTask {
    CreateFormation {
        name: "A_HAm_cib"
        red: 83
        green: 130
        blue: 52
    }
}
GeomodellerTask {
    CreateFormation {
        name: "A_FOj_xs_b"
        red: 127
        green: 128
        blue: 0.0
    }
}
GeomodellerTask {
    CreateFormation {
        name: "A_FO_xo_a"
        red: 206
        green: 0.0
        blue: 205
    }
}
GeomodellerTask {
    CreateFormation {
        name: "A_FO_od"
        red: 158
        green: 33
        blue: 238
    }
}
GeomodellerTask {
    CreateFormation {
        name: "A_FOu_bbo"
        red: 0.0
        green: 178
        blue: 238
    }
}
GeomodellerTask {
    CreateFormation {
        name: "A_FOh_xs_f"
        red: 158
        green: 33
        blue: 238
    }
}
GeomodellerTask {
    CreateFormation {
        name: "A_FOr_b"
        red: 0.0
        green: 178
        blue: 238
    }
}
#---------------------------------------------------------------
#------------------Set Stratigraphic Pile-
#---------------------------------------------------------------
GeomodellerTask {
SetSeries {
    name: "Fortescue_Group"
    position: 1
    relation: "erode"
    }
}
GeomodellerTask {
AddFormationToSeries {
    series: "Fortescue_Group"
    formation: "A_FOr_b"
    }
}
GeomodellerTask {
AddFormationToSeries {
    series: "Fortescue_Group"
    formation: "A_FOh_xs_f"
    }
}
GeomodellerTask {
AddFormationToSeries {
    series: "Fortescue_Group"
    formation: "A_FOo_bbo"
    }
}
GeomodellerTask {
AddFormationToSeries {
    series: "Fortescue_Group"
    formation: "A_FOp_bs"
    }
}
GeomodellerTask {
AddFormationToSeries {
    series: "Fortescue_Group"
    formation: "A_FOu_bbo"
    }
}
GeomodellerTask {
AddFormationToSeries {
    series: "Fortescue_Group"
    formation: "A_FO_od"
    }
}
GeomodellerTask {
AddFormationToSeries {
    series: "Fortescue_Group"
    formation: "A_FO_xo_a"
    }
}
GeomodellerTask {
AddFormationToSeries {
    series: "Fortescue_Group"
    formation: "A_FOj_xs_b"
    }
}
GeomodellerTask {
SetSeries {
    name: "Hamersley_Group"
    position: 1
    relation: "erode"
    }
}
GeomodellerTask {
AddFormationToSeries {
    series: "Hamersley_Group"
    formation: "A_HAm_cib"
    }
}
GeomodellerTask {
AddFormationToSeries {
    series: "Hamersley_Group"
    formation: "A_HAd_kd"
    }
}
GeomodellerTask {
AddFormationToSeries {
    series: "Hamersley_Group"
    formation: "A_HAS_xsl_ci"
    }
}
GeomodellerTask {
AddFormationToSeries {
    series: "Hamersley_Group"
    formation: "P__HAb_cib"
    }
}
GeomodellerTask {
AddFormationToSeries {
    series: "Hamersley_Group"
    formation: "P__HAj_xci_od"
    }
}
GeomodellerTask {
AddFormationToSeries {
    series: "Hamersley_Group"
    formation: "P__HAw_fr"
    }
}
GeomodellerTask {
AddFormationToSeries {
    series: "Hamersley_Group"
    formation: "P__HAo_ci"
    }
}
GeomodellerTask {
SetSeries {
    name: "Turee_Creek_Group"
    position: 1
    relation: "erode"
    }
}
GeomodellerTask {
AddFormationToSeries {
    series: "Turee_Creek_Group"
    formation: "P__TK_s"
    }
}
GeomodellerTask {
AddFormationToSeries {
    series: "Turee_Creek_Group"
    formation: "P__TKk_sf"
    }
}
GeomodellerTask {
AddFormationToSeries {
    series: "Turee_Creek_Group"
    formation: "P__TKo_stq"
    }
}
GeomodellerTask {
AddFormationToSeries {
    series: "Turee_Creek_Group"
    formation: "P__TKa_xs_k"
    }
}
GeomodellerTask {
SetSeries {
    name: "Shingle_Creek_Group"
    position: 1
    relation: "erode"
    }
}
GeomodellerTask {
AddFormationToSeries {
    series: "Shingle_Creek_Group"
    formation: "P__SKb_bb"
    }
}
GeomodellerTask {
AddFormationToSeries {
    series: "Shingle_Creek_Group"
    formation: "P__SKq_stq"
    }
}
GeomodellerTask {
SetSeries {
    name: "Wyloo_Group"
    position: 1
    relation: "erode"
    }
}
GeomodellerTask {
AddFormationToSeries {
    series: "Wyloo_Group"
    formation: "P__WYd_kd"
    }
}
GeomodellerTask {
AddFormationToSeries {
    series: "Wyloo_Group"
    formation: "P__WYa_st"
    }
}
GeomodellerTask {
AddFormationToSeries {
    series: "Wyloo_Group"
    formation: "P__WYm_sp"
    }
}

#---------------------------------------------------------------
#----------------Import 3D data ---Base Model--
#  these methods are very compavt and high functioning
# can create formations and faults, even if not created previously
# first developed for geology from geophysics tools, Naudy and WormE
# so dyke networks, and gravity contact/fault networks.
#---------------------------------------------------------------

GeomodellerTask {
    ReadAndImport3dData {
        contact_csv_file: "./output/contacts_clean.csv"
        foliation_csv_file: "./output/orientations_clean.csv"
        operation: Import_default; # make the most intelligent decision in the context.. if a named formation, add to it etc.
        contact_header_linestoSkip: 1;
        foliation_header_linestoSkip: 1;
        fault_limit_header_linestoSkip: 1;
        spatial_location_error: 1;
        vertical_location_error: 1;
        #Treat_Tag_As_Text_Only: true;
    }
}

#---------------------------------------------------------------
#--------------------------Save As Model------------------------
#---------------------------------------------------------------

GeomodellerTask {
    SaveProjectAs {
        filename: "./Models_Prelim/Models_UWA.xml"
    }
}
#---------------------------------------------------------------
#----------------------------Compute Model----------------------
#---------------------------------------------------------------
GeomodellerTask {
    ComputeModel {
        FaultList {
            node: "ALL"
        }
        SectionList {
            node: "Topography"
        }
        radius: 10.0
    }
}
GeomodellerTask {
    GetModelSummary {
        level: 2;
        filename: "summary.rpt";
    }
}
GeomodellerTask {
    RenderModel {
        nx:12;
        ny:12;
        nz:12;
        generateSurfaces: true;
        generateVolumes: false;
        topoLimited: true;
        adaptToTopo: true;
        buildFormations: false;
        buildFaults: true;
        buildDykes: false;
    }
}
#---------------------------------------------------------------
#-----------------------Add geophysical Properties--------------
#---------------------------------------------------------------



#---------------------------------------------------------------
#--------------------------Export Lithology Voxet---------------
#---------------------------------------------------------------
#GeomodellerTask {
#    SaveLithologyVoxet {
#        nx: 100
#        ny: 100
#        nz: 400
#        LithologyVoxetFileStub: "./Litho_Voxet/LithoVoxet.vo"
#    }
#}
# Export the 3D shapes (meshes) to a set of files in a directory. No ZIP file in BATCH yet.
GeomodellerTask {
    Export3DShapes {
        output_directory: "./ALL_TSURF";
        file_type: TSURF;
        mesh_type: SURFACE;
        log: "export_3d_shapes.rpt";
    }
}

GeomodellerTask {
    Export3DShapes {
        output_directory: "./Shingle_Creek_TSURF";
        model_name:  "Shingle_Creek_Group"; # Allow a selection of the formation shapes to write. If none given write them all.
        file_type: TSURF;
        mesh_type: SHELL;
        log: "export_3d_shapes.rpt";
    }
}
#---------------------------------------------------------------
#--------------------------Save As Model------------------------
#---------------------------------------------------------------

GeomodellerTask {
    SaveProjectAs {
        filename: "./Models_Final/Models_UWA.xml"
    }
}
